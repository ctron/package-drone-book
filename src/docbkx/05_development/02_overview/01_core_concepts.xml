<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" 
	xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd">

	<title>Core concepts</title>
	
	<para>
	Package Drone consists of a few core concepts. This section will explain these concepts.
	</para>
	
	<section id="concept.channel">
	   <title>Channels</title>
	   
	   <para>
	   The main entity (beside an artifact) is a channel. A channel simply is a container
	   for artifacts. A channel is identified by a unique ID which can never change. Additionally
	   a channel may have an alias name, which is also unique, but may change over time. The ID is
	   generated by the system itself while the alias can be defined by the user.
	   </para>
	   
	   <para>
	   Each channel has its own set of metadata. A channel can have provided metadata and
	   extracted metadata (also see <xref linkend="concept.metadata"/>). The extracted metadata
	   is the metadata produced during the aggregation run of a channel. Each channel aggregator
	   can add metadata during this process which will then be stored on channel level.
	   </para>
	   
	   <para>
	   The functionality of channels is defined by
	   <quote><link linkend="concept.aspect">channel aspects</link></quote>.
	   A channel without aspects simple stores BLOBs, but does no further processing on these
	   BLOBs.
	   </para>
	   
	   <para>
	   A channel can also be locked. This puts the channel in <quote>read-only mode</quote>.
	   </para>
	   
	</section>
	
	<section id="concept.artifact">
	   <title>Artifact</title>
	   
	   <para>
	   An artifact is simply a <acronym>BLOB</acronym> stored in a <link linkend="concept.channel">channel</link>.
	   Artifacts can be created and deleted, but never modified. This means that the name and data section
	   of an artifact can never change. The same ID gives the same data. Until it is deleted.
	   </para>
	   
	   <para>
	   An artifact has a unique ID. The ID is not only unique inside the channel but on unique to the
	   whole system. It is generated by Package Drone when the artifact is stored. The artifact also has
	   a name. The name is not unique. So the same name can appear multiple times in a chanel.
	   </para>
	   
	   <para>
	   Artifacts also have provided and extracted metadata (also see <xref linkend="concept.metadata"/>).
	   The extracted meta data is created by meta data extractors.
	   </para>
	   
	   <para>
	   There are different types of artifacts. The default, <quote>stored artifacts</quote> which where
	   uploaded either manually or by a deployment process (like <code>mvn deploy</code>). Each stored
	   artifact can be parent to child artifacts, which also get greated manually or using a
	   deployment process.
	   </para>
	   
	   <para>
	   Then there are virtual artifacts. These get created by 
	   <link linkend="concept.aspect.virtualizer">Virtualizers</link> and are like children artifacts.
	   However, these cannot be deleted manually.
	   </para>
	   
	   <para>
	   Another artifact type are the <quote>generator</quote> and <quote>generated</quote> artifacts
	   (see <xref linkend="concept.generators"/>). These
	   are like virtual artifacts, with the difference that a specific generator implementation will
	   be used to create the <quote>generated</quote> child artifacts. 
	   </para>

	</section>
	
	<section id="concept.aspect">
        <title>Channel aspects</title>
        
        <para>
        Channel aspects extend the functionality of a channel. When a channel aspect is
        assigned to a channel, the artifacts and channel gets reprocessed so that the
        extracted metadata and channel aggregation state is up to date. 
        </para>
        
        <para>
        When a channel aspect is removed from the channel, all metadata and virtual artifacts
        it created will be removed.
        </para>
        
        <para>
        Each channel aspect can choose to implement one or more of the following
        extension points.
        </para>
        
        <section>
            <title>Metadata Extractor</title>
            <para>
            This extension will be triggered when a new artifact is stored. It will
            get the BLOB and can extract metadata which will then be stored with the
            artifact.
            </para>
        </section>
        
        <section>
            <title>Channel Aggregator</title>
            <para>
            The channel aggregator will be called at least once after the channel has changed.
            It can aggregate information over the whole channel and provide the result as
            metadata on the channel level.
            </para>
        </section>
        
        <section id="concept.aspect.virtualizer">
            <title>Artifact Virtualizer</title>
            <para>
            An artifact virtalizer has the ability to create virtual child artifacts for an artifacts.
            No matter what type of artifact that is.
            </para>
            
            <para>
            The virtualizer has access to the full meta data of the artifact it gets called for and can
            create any number of virtual child artifacts for this parent artifacts. 
            </para>
        </section>
        
        <section>
            <title>Channel Listener</title>
            <para>
            Channel listeners get called when the channel gets changed. Before or after an artifact
            was added.
            </para>
            <para>
            In the handler which gets called before the artifact is stored, the listener has
            the chance to <quote>veto</quote> the addition. This will prevent the
            artifact to be stored.
            </para>
        </section>
        
	</section>
	
	<section id="concept.generators">
	   <title>Generators</title>
	   
	   <para>
        Generators transfor <quote>generator artifacts</quote> into one ore more <quote>generated
        artifacts</quote>, which are children of the <quote>generator artifact</quote>.
	   </para>
	   
	   <para>
	   Also the BLOB data of the generator artifact cannot be changed after it was added. But
	   the provided meta data can be edites as needed. So in the most cases the generators
	   will use the provided meta data of the generator artifact and create their generated
	   artifacts.
	   </para>
	   
	   <para>
	   Generator also get asked if they require re-generation when the channel was changes (e.g.
	   an artifact was added or removed to the channel). If the generator require re-generation
	   then it will be regenerated before the current operation which is in progress is being finished.
	   </para>  
	   
	</section>
	
	<section id="concept.metadata">
	   <title>Metadata</title>
	   
	   <para>
	   Artifacts and channels may have <quote>provided</quote> and <quote>extracted</quote> meta data.
	   While extracted meta data is being generated by some functionality of the channel aspects, the
	   provided meta data can be edited and provided when the artifacts is being created.
	   </para>
	   
	   <para>
	   Meta data is actually a map of meta data key to value. And a meta data key is a combination of
	   a namespace and a key. The namespace is in most cases the ID of the channel aspect.
	   </para>
	   
	   <para>
	   So for example the <quote>Hasher</quote> channel aspect, which creates hash sums of the BLOB
	   has the channel aspect id <code>hasher</code> and stores the MD5 checksum as <code>md5</code>.
	   So the namespace would be <code>hasher</code>, the key <code>md5</code> and the value the MD5 
	   checksum of the BLOB.
	   </para>
	   
	   <para>
	   If the same meta data key is present in the provided and extracted meta data, then the value of
	   the provided meta data will override the value of the extracted meta data.
	   </para>
	   
	   <para>
	   When a channel aspect is removed both provided and extracted meta data of this channel aspect
	   will be deleted, by deleting all entries where the channel aspect id matches the
	   namespace of the meta data entry.
	   </para>
	</section>
	
</section>